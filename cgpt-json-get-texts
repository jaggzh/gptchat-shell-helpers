#!/bin/bash
. ansi.sh
show_role=true
role_condition='.message.author.role == "user" or .message.author.role == "assistant"'
regex=""
filter_out=false
color_enabled=true

print_help() {
	cat <<-'EOT'
		Usage: $0 [OPTIONS] [file]
		Parse a ChatGPT JSON (exported history) file (or stdin if no file given).

		At present it will let you do some selection of the texts, including regex
		pattern match (and exclusion), and selecting all text vs. your own ('user')
		or ChatGPT's ('assistant') -- (Called the "role" in the json file.)

		Options:
		-R			Do not output the role
		-a			Assistant role only
		-u			User role only
		--re REGEX		Include only entries matching REGEX
		--er REGEX		Exclude entries matching REGEX
		-c			Enable coloring (default)
		-C			Disable coloring
		-h, --help		Display this help message and exit

		If no file is provided, the script will read from stdin.
	EOT
}

print_error() {
	echo "Invalid option: $1" >&2
	echo "Use -h or --help to get usage information." >&2
	exit 1
}

while (( $# )); do
	case "$1" in
		-R) show_role=false; shift ;;
		-a) role_condition='.message.author.role == "assistant"'; shift ;;
		-u) role_condition='.message.author.role == "user"'; shift ;;
		--re) shift; regex="$1"; shift ;;
		--er) shift; regex="$1"; filter_out=true; shift ;;
		-c) color_enabled=true; shift ;;
		-C) color_enabled=false; shift ;;
		-h|--help) print_help; exit 0 ;;
		-*) print_error "$1" ;;
		*) break ;;
	esac
done

if [[ $# -lt 1 ]]; then
	echo "Reading from stdin..." >&2
	filename=-
else
	filename=$1
fi

if $show_role; then
	output=$(jq -r ".[].mapping[] | select($role_condition) | .message.author.role + \": \" + .message.content.parts[0]" "$filename")
else
	output=$(jq ".[].mapping[] | select($role_condition) | .message.content.parts[0]" "$filename")
fi

if [[ -n "$regex" ]]; then
	if $filter_out; then
		output=$(perl -nle "print unless /$regex/i" <<<"$output")
	else
		output=$(perl -nle "print if /$regex/i" <<<"$output")
	fi

	if $color_enabled; then
		output=$(perl -pe "s/($regex)/${bcyae}\$1${rste}/ig" <<<"$output")
	fi
fi

echo "$output"
